<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
    <title>Document</title>
</head>
<body>
    <table class="table table-striped">
        <thead>
          <tr>
            <th scope="col">Roll No</th>
            <th scope="col">Name</th>
            <th scope="col">Degree</th>
            <th scope="col">City</th>
            <th scope="col">Actions</th>
          </tr>
        </thead>
        <tbody>
          <% students.forEach((student) => { %>
            <tr>
                <td><%= student.rollno %></td>
                <td><%= student.name %></td>
                <td><%= student.degree %></td>
                <td><%= student.city %></td>
                <td>
                    <button class="btn btn-danger delete-btn" style="margin-right: 5px;" data-student-id="<%= student._id %>">Delete</button>
                    <button class="btn btn-success edit-btn" style="margin-left:5px;"
    data-student-id="<%= student._id %>"
    data-student-rollno="<%= student.rollno %>"
    data-student-name="<%= student.name %>"
    data-student-degree="<%= student.degree %>"
    data-student-city="<%= student.city %>">
    Edit
</button>
                </td>
            </tr>
          <% }); %>
        </tbody>
    </table>
    <div class="form-container">
        <form action="/save" method="post">
            <div>
                <label for="rollno">Roll No:</label>
                <input type="text" class="form-control" name="rollno" id="rollno">
            </div>
            <input type="hidden" name="studentId" id="studentId">
            <div>
                <label for="name">Name:</label>
                <input type="text" class="form-control" name="name" id="name">
            </div>
            <div>
                <label for="degree">Degree:</label>
                <input type="text" class="form-control" name="degree" id="degree">
            </div>
            <div>
                <label for="city">City:</label>
                <input type="text" class="form-control" name="city" id="city">
            </div>
            <div class="mt-3">
                <button type="submit" class="btn btn-success">Save</button>
            </div>
        </form>
    </div>
</body>
</html>
<style>
    .form-container {
        display:flex;
        justify-content:center;
        align-items: center;
        min-height: 70vh;
        background-color: #f5f5f5;
    }
    body{
        margin-left:10px;
    }
</style>
<script>
    document.addEventListener('DOMContentLoaded', () => {
    const deleteButtons = document.querySelectorAll('.btn-danger');
    const editButtons = document.querySelectorAll('.edit-btn');
    const form = document.querySelector('form');

    deleteButtons.forEach(button => {
        button.addEventListener('click', async () => {
            const studentId = button.getAttribute('data-student-id');
            try {
                const response = await fetch(`/delete/${studentId}`, {
                    method: 'DELETE',
                });

                if (response.ok) {
                    // Reload the page or update the UI as needed
                    location.reload();
                } else {
                    console.error('Failed to delete student');
                }
            } catch (error) {
                console.error('Error during fetch:', error);
            }
        });
    });

    editButtons.forEach(button => {
      button.addEventListener('click', () => {
        const studentId = button.getAttribute('data-student-id');
        const rollno = button.getAttribute('data-student-rollno');
        const name = button.getAttribute('data-student-name');
        const degree = button.getAttribute('data-student-degree');
        const city = button.getAttribute('data-student-city');

        // Fill the form with student data
        form.rollno.value = rollno;
        form.name.value = name;
        form.degree.value = degree;
        form.city.value = city;

        // Add the student ID to the hidden field
        form.studentId.value = studentId;
      });
    });
  });


</script>
